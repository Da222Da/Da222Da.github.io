"use strict";(self.webpackChunknote=self.webpackChunknote||[]).push([[438],{4806:(n,a,s)=>{s.r(a),s.d(a,{data:()=>e});const e={key:"v-19d2b1f7",path:"/technology/javascript/command/object-oriented-programming.html",title:"JavaScript 面向对象编程",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"什么是面向对象编程？",slug:"什么是面向对象编程",children:[{level:3,title:"1.类和实例",slug:"_1-类和实例",children:[]},{level:3,title:"2.类的三大特性：继承、封装、和多态",slug:"_2-类的三大特性-继承、封装、和多态",children:[]}]}],filePathRelative:"technology/javascript/command/object-oriented-programming.md",git:{updatedTime:165812478e4,contributors:[{name:"yunchao.mei",email:"",commits:1}]}}},4848:(n,a,s)=>{s.r(a),s.d(a,{default:()=>m});var e=s(6252);const t=(0,e._)("h1",{id:"javascript-面向对象编程",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#javascript-面向对象编程","aria-hidden":"true"},"#"),(0,e.Uk)(" JavaScript 面向对象编程")],-1),p={class:"custom-container tip"},l=(0,e._)("p",{class:"custom-container-title"},"TIP",-1),c={class:"table-of-contents"},o=(0,e.Uk)("什么是面向对象编程？"),r=(0,e.Uk)("1.类和实例"),i=(0,e.Uk)("2.类的三大特性：继承、封装、和多态"),u=(0,e.uE)('<h2 id="什么是面向对象编程" tabindex="-1"><a class="header-anchor" href="#什么是面向对象编程" aria-hidden="true">#</a> 什么是面向对象编程？</h2><p>在搞清楚什么是面向对象之前，先得搞清楚以下几个概念：</p><h3 id="_1-类和实例" tabindex="-1"><a class="header-anchor" href="#_1-类和实例" aria-hidden="true">#</a> 1.类和实例</h3><ul><li>类，即是模板。<code>例如，张三是人、旺财是狗。这里的人、狗就是我们所说的类</code>。</li><li>实例，类的具体化。<code>例如，张三也算是个人。这里的张三就是一个实例</code>。</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 声明人类</span>\n<span class="token keyword">class</span> <span class="token class-name">People</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 声明狗类</span>\n<span class="token keyword">class</span> <span class="token class-name">Dog</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">let</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">People</span><span class="token punctuation">(</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 声明人类的实例张三</span>\n<span class="token keyword">let</span> a1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dog</span><span class="token punctuation">(</span><span class="token string">&quot;旺财&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 声明狗类的实例旺财</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="_2-类的三大特性-继承、封装、和多态" tabindex="-1"><a class="header-anchor" href="#_2-类的三大特性-继承、封装、和多态" aria-hidden="true">#</a> 2.类的三大特性：继承、封装、和多态</h3><ul><li>什么是继承？继承，子类继承父类。</li><li>什么是封装？封装，数据的权限和保密。</li><li>什么是多态？多态，同一接口的不同实现。</li></ul>',7),k={},m=(0,s(3744).Z)(k,[["render",function(n,a){const s=(0,e.up)("RouterLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[t,(0,e._)("div",p,[l,(0,e._)("nav",c,[(0,e._)("ul",null,[(0,e._)("li",null,[(0,e.Wm)(s,{to:"#什么是面向对象编程"},{default:(0,e.w5)((()=>[o])),_:1}),(0,e._)("ul",null,[(0,e._)("li",null,[(0,e.Wm)(s,{to:"#_1-类和实例"},{default:(0,e.w5)((()=>[r])),_:1})]),(0,e._)("li",null,[(0,e.Wm)(s,{to:"#_2-类的三大特性-继承、封装、和多态"},{default:(0,e.w5)((()=>[i])),_:1})])])])])])]),u],64)}]])}}]);